name: GitHub Pages Publish

on:
  push:
    branches: [ spike_doc ]

env:
  #root_branch: 'develop'
  doc_branch: 'spike_pages'
  working_branch: 'tmp_branch_for_doc'
  published_folder: 'generated_docs'
  adoc_folder: 'asciidocs'


jobs:
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#
#    # Includes the AsciiDoctor GitHub Pages Action to convert adoc files to html and publish to gh-pages branch
#    # from https://github.com/manoelcampos/asciidoctor-ghpages-action
#    - name: asciidoctor-ghpages
#      uses: manoelcampos/asciidoctor-ghpages-action@v2
#      with:
#        pdf_build: true
#        asciidoctor_params: --attribute=nofooter
#        # adoc_file_ext: .ascii # default is .adoc
#        source_dir: docs/ # default is .
#        # slides_build: true
#        #pre_build: python pre_build.py
#        # post_build:

#  publish-asciidoc:
#    runs-on: ubuntu-latest
#    container:
#      image: asciidoctor/docker-asciidoctor
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Generate HTML
#        run: |
#          INPUT_PATH=asciidocs
#          asciidoctor -D docs -R $INPUT_PATH $(find $INPUT_PATH -type f -name "[^_]*.adoc")
#          find $INPUT_PATH -name "[^_]*.adoc" -exec asciidoctor -b html -R $INPUT_PATH -D docs {} \;
#
#      - name: publish jekyll site in gh pages


# Set -R to keep subfolder in output files.
# It's possible to include files that are not in docs
# To find all files that not start by `_` find docs -name "[^_]*.adoc"
# To list all files that not start by '_': $(find $INPUT_PATH -type f -name "[^_]*.adoc")

#manoelcampos/asciidoctor-ghpages-action@v2
#  build:
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#
#    # Includes the AsciiDoctor GitHub Pages Action to convert adoc files to html and publish to gh-pages branch
#    # from https://github.com/manoelcampos/asciidoctor-ghpages-action
#    - name: asciidoctor-ghpages
#      uses: manoelcampos/asciidoctor-ghpages-action@v2
#      with:
#        # pdf_build: true
#        asciidoctor_params: --attribute=nofooter
#        adoc_file_ext: "[^_]*.adoc" # default is .adoc
#        source_dir: asciidocs/ # default is .
#        # slides_build: true
#        # pre_build: python pre_build.py
#        # post_build:


  publish-asciidoc:
    runs-on: ubuntu-latest
    container:
      image: asciidoctor/docker-asciidoctor
    steps:
      - uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config --global --add safe.directory $(realpath .)
          git config user.email github-action@github.com
          git config user.name github-action

      - name: Switch to working branch
        run: |
          git checkout -b ${{env.working_branch}}

      - name: Generate HTML
        run: |
          asciidoctor -r asciidoctor-diagram -D ${{env.published_folder}} -R ${{env.adoc_folder}} $(find ${{env.adoc_folder}} -type f -name "[^_]*.adoc")
          rm -rf ${{env.published_folder}}/.asciidoctor

      - name: Adding docs files to working branch
        run: |
          echo "Add docs folder"
          git add ${{env.published_folder}}
          git commit -m "Update documentation"

          echo "Checkout doc branch"
          git fetch origin ${{env.doc_branch}}
          git checkout ${{env.doc_branch}}

          echo "Replace docs by the new one"
          git rm -rf .
          git checkout ${{env.working_branch}}  -- ${{env.published_folder}}
          git mv docs/* .

          echo "Commit and push modification "
          git commit -m "Update documentation"
          git push -f
